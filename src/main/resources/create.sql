DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS agendas;
DROP TABLE IF EXISTS addresses;
DROP TABLE IF EXISTS emails;
DROP TABLE IF EXISTS phones;
DROP TABLE IF EXISTS contacts;
DROP TABLE IF EXISTS contact_addresses;
DROP TABLE IF EXISTS contact_emails;
DROP TABLE IF EXISTS contact_phones;
DROP TABLE IF EXISTS agendas_contacts;
DROP TABLE IF EXISTS agendas_users;
DROP TABLE IF EXISTS contacts_contact_detail;

CREATE TABLE users
(
    id                  INTEGER      NOT NULL,
    createdBy_id       INTEGER,
    createdDate        TIMESTAMP WITHOUT TIME ZONE,
    lastModifiedBy_id INTEGER,
    lastModifiedDate  TIMESTAMP WITHOUT TIME ZONE,
    u_login             VARCHAR(100) NOT NULL,
    u_password          VARCHAR(100) NOT NULL,
    mail                VARCHAR(100) NOT NULL,
    agenda_id           INTEGER,
    grants              VARCHAR(100) NOT NULL,
    token               VARCHAR(100),
    active              BOOLEAN,
    CONSTRAINT pk_users PRIMARY KEY (id)
);

CREATE TABLE agendas
(
    id      INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    user_id INTEGER,
    CONSTRAINT pk_agendas PRIMARY KEY (id)
);

CREATE TABLE agendas_contacts
(
    agenda_id   INTEGER NOT NULL,
    contacts_id INTEGER NOT NULL
);

CREATE TABLE contacts
(
    id                  INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
    createdBy_id       INTEGER,
    createdDate        TIMESTAMP WITHOUT TIME ZONE,
    lastModifiedBy_id INTEGER,
    lastModifiedDate  TIMESTAMP WITHOUT TIME ZONE,
    cName              VARCHAR(100)                             NOT NULL,
    email_id            INTEGER,
    address_id          INTEGER,
    CONSTRAINT pk_contacts PRIMARY KEY (id)
);

CREATE TABLE contacts_phones
(
    contact_id INTEGER NOT NULL,
    phones_id  INTEGER NOT NULL
);

CREATE TABLE contact_detail
(
    id                  INTEGER      NOT NULL,
    dtype               VARCHAR(31),
    createdBy_id       INTEGER,
    createdDate        TIMESTAMP WITHOUT TIME ZONE,
    lastModifiedBy_id INTEGER,
    lastModifiedDate  TIMESTAMP WITHOUT TIME ZONE,
    c_value             VARCHAR(100),
    c_type              VARCHAR(100) NOT NULL,
    holder_id           INTEGER,
    CONSTRAINT pk_contactdetail PRIMARY KEY (id)
);

CREATE TABLE contacts_contact_detail
(
    contact_id       INTEGER NOT NULL,
    contactDetail_id INTEGER NOT NULL,
    phones_id        INTEGER NOT NULL
);

-- FOREIGN KEYS

ALTER TABLE users
    ADD CONSTRAINT uc_users_mail UNIQUE (mail);

ALTER TABLE users
    ADD CONSTRAINT uc_users_ulogin UNIQUE (u_login);

ALTER TABLE users
    ADD CONSTRAINT FK_USERS_ON_AGENDA FOREIGN KEY (agenda_id) REFERENCES agendas (id);

ALTER TABLE users
    ADD CONSTRAINT FK_USERS_ON_CREATEDBY FOREIGN KEY (createdBy_id) REFERENCES users (id);

ALTER TABLE users
    ADD CONSTRAINT FK_USERS_ON_LASTMODIFIEDBY FOREIGN KEY (lastModifiedBy_id) REFERENCES users (id);

ALTER TABLE agendas_contacts
    ADD CONSTRAINT uc_agendas_contacts_contacts UNIQUE (contacts_id);

ALTER TABLE agendas
    ADD CONSTRAINT FK_AGENDAS_ON_USER FOREIGN KEY (user_id) REFERENCES users (id);

ALTER TABLE agendas_contacts
    ADD CONSTRAINT fk_agecon_on_agenda FOREIGN KEY (agenda_id) REFERENCES agendas (id);

ALTER TABLE agendas_contacts
    ADD CONSTRAINT fk_agecon_on_contact FOREIGN KEY (contacts_id) REFERENCES contacts (id);

ALTER TABLE contacts_phones
    ADD CONSTRAINT uc_contacts_phones_phones UNIQUE (phones_id);

ALTER TABLE contacts
    ADD CONSTRAINT FK_CONTACTS_ON_ADDRESS FOREIGN KEY (address_id) REFERENCES contact_detail (id);

ALTER TABLE contacts
    ADD CONSTRAINT FK_CONTACTS_ON_CREATEDBY FOREIGN KEY (createdBy_id) REFERENCES users (id);

ALTER TABLE contacts
    ADD CONSTRAINT FK_CONTACTS_ON_EMAIL FOREIGN KEY (email_id) REFERENCES contact_detail (id);

ALTER TABLE contacts
    ADD CONSTRAINT FK_CONTACTS_ON_LASTMODIFIEDBY FOREIGN KEY (lastModifiedBy_id) REFERENCES users (id);

ALTER TABLE contacts_phones
    ADD CONSTRAINT fk_conpho_on_contact FOREIGN KEY (contact_id) REFERENCES contacts (id);

ALTER TABLE contacts_phones
    ADD CONSTRAINT fk_conpho_on_phone FOREIGN KEY (phones_id) REFERENCES contact_detail (id);


ALTER TABLE contact_detail
    ADD CONSTRAINT FK_CONTACTDETAIL_ON_CREATEDBY FOREIGN KEY (createdBy_id) REFERENCES contact_detail (id);

ALTER TABLE contact_detail
    ADD CONSTRAINT FK_CONTACTDETAIL_ON_HOLDER FOREIGN KEY (holder_id) REFERENCES agendas (id);

ALTER TABLE contact_detail
    ADD CONSTRAINT FK_CONTACTDETAIL_ON_LASTMODIFIEDBY FOREIGN KEY (lastModifiedBy_id) REFERENCES contact_detail (id);


DROP SEQUENCE IF EXISTS contact_detail_seq;
CREATE SEQUENCE contact_detail_seq START WITH 1 INCREMENT BY 1;